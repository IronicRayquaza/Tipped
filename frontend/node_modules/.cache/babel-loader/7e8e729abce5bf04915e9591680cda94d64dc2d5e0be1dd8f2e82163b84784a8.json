{"ast":null,"code":"var _jsxFileName = \"C:\\\\Tipped\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport abi from \"./contract/TipMe.json\";\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport \"./App.css\";\nimport Tipping from \"./components/Tipping\";\nimport Tips from \"./components/Tips\";\n//import tipimage from \"./tip.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [state, setState] = useState({\n    provider: null,\n    signer: null,\n    contract: null\n  });\n  const [account, setAccount] = useState(\"None\");\n  useEffect(() => {\n    const connectWallet = async () => {\n      const contractAddress = \"0x4d53E2d761A9a833403d09F49cf5f93162bEB66c\";\n      const contractABI = abi.abi;\n      try {\n        const {\n          ethereum\n        } = window;\n        if (ethereum) {\n          const account = await ethereum.request({\n            method: \"eth_requestAccounts\"\n          });\n          window.ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          window.ethereum.on(\"accountsChanged\", () => {\n            window.location.reload();\n          });\n          const provider = new ethers.providers.Web3Provider(ethereum);\n          const signer = provider.getSigner();\n          const contract = new ethers.Contract(contractAddress, contractABI, signer);\n          setAccount(account);\n          setState({\n            provider,\n            signer,\n            contract\n          });\n        } else {\n          alert(\"Please install metamask\");\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    connectWallet();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#EFEFEF\",\n      height: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      class: \"text-muted lead \",\n      style: {\n        marginTop: \"10px\",\n        marginLeft: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Connected Account - \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Tipping, {\n        state: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tips, {\n        state: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"e8aA/xQQcRZRqz1ZwCPGCTdvbqw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["abi","useState","useEffect","ethers","Tipping","Tips","App","state","setState","provider","signer","contract","account","setAccount","connectWallet","contractAddress","contractABI","ethereum","window","request","method","on","location","reload","providers","Web3Provider","getSigner","Contract","alert","error","console","log","backgroundColor","height","marginTop","marginLeft"],"sources":["C:/Tipped/frontend/src/App.js"],"sourcesContent":["import abi from \"./contract/TipMe.json\";\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport \"./App.css\";\nimport Tipping from \"./components/Tipping\";\nimport Tips from \"./components/Tips\";\n//import tipimage from \"./tip.png\";\n\nfunction App() {\n  const [state, setState] = useState({\n    provider: null,\n    signer: null,\n    contract: null,\n  });\n\n  const [account, setAccount] = useState(\"None\");\n  useEffect(() => {\n    const connectWallet = async () => {\n      const contractAddress = \"0x4d53E2d761A9a833403d09F49cf5f93162bEB66c\";\n      const contractABI = abi.abi;\n      try {\n        const { ethereum } = window;\n\n        if (ethereum) {\n          const account = await ethereum.request({\n            method: \"eth_requestAccounts\",\n          });\n\n          window.ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n\n          window.ethereum.on(\"accountsChanged\", () => {\n            window.location.reload();\n          });\n\n          const provider = new ethers.providers.Web3Provider(ethereum);\n          const signer = provider.getSigner();\n          const contract = new ethers.Contract(\n            contractAddress,\n            contractABI,\n            signer\n          );\n          setAccount(account);\n          setState({ provider, signer, contract });\n        } else {\n          alert(\"Please install metamask\");\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    connectWallet();\n  }, []);\n  return (\n    <div style={{ backgroundColor: \"#EFEFEF\", height: \"100%\" }}>\n      \n      <p\n        class=\"text-muted lead \"\n        style={{ marginTop: \"10px\", marginLeft: \"5px\" }}\n      >\n        <small>Connected Account - {account}</small>\n      </p>\n      <div className=\"App\">\n        <Tipping state={state} />\n        <Tips state={state} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,GAAG,MAAM,uBAAuB;AACvC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAO,WAAW;AAClB,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,IAAI,MAAM,mBAAmB;AACpC;AAAA;AAEA,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC;IACjCQ,QAAQ,EAAE,IAAI;IACdC,MAAM,EAAE,IAAI;IACZC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,MAAM,CAAC;EAC9CC,SAAS,CAAC,MAAM;IACd,MAAMY,aAAa,GAAG,YAAY;MAChC,MAAMC,eAAe,GAAG,4CAA4C;MACpE,MAAMC,WAAW,GAAGhB,GAAG,CAACA,GAAG;MAC3B,IAAI;QACF,MAAM;UAAEiB;QAAS,CAAC,GAAGC,MAAM;QAE3B,IAAID,QAAQ,EAAE;UACZ,MAAML,OAAO,GAAG,MAAMK,QAAQ,CAACE,OAAO,CAAC;YACrCC,MAAM,EAAE;UACV,CAAC,CAAC;UAEFF,MAAM,CAACD,QAAQ,CAACI,EAAE,CAAC,cAAc,EAAE,MAAM;YACvCH,MAAM,CAACI,QAAQ,CAACC,MAAM,EAAE;UAC1B,CAAC,CAAC;UAEFL,MAAM,CAACD,QAAQ,CAACI,EAAE,CAAC,iBAAiB,EAAE,MAAM;YAC1CH,MAAM,CAACI,QAAQ,CAACC,MAAM,EAAE;UAC1B,CAAC,CAAC;UAEF,MAAMd,QAAQ,GAAG,IAAIN,MAAM,CAACqB,SAAS,CAACC,YAAY,CAACR,QAAQ,CAAC;UAC5D,MAAMP,MAAM,GAAGD,QAAQ,CAACiB,SAAS,EAAE;UACnC,MAAMf,QAAQ,GAAG,IAAIR,MAAM,CAACwB,QAAQ,CAClCZ,eAAe,EACfC,WAAW,EACXN,MAAM,CACP;UACDG,UAAU,CAACD,OAAO,CAAC;UACnBJ,QAAQ,CAAC;YAAEC,QAAQ;YAAEC,MAAM;YAAEC;UAAS,CAAC,CAAC;QAC1C,CAAC,MAAM;UACLiB,KAAK,CAAC,yBAAyB,CAAC;QAClC;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IACDf,aAAa,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EACN,oBACE;IAAK,KAAK,EAAE;MAAEkB,eAAe,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAA,wBAEzD;MACE,KAAK,EAAC,kBAAkB;MACxB,KAAK,EAAE;QAAEC,SAAS,EAAE,MAAM;QAAEC,UAAU,EAAE;MAAM,CAAE;MAAA,uBAEhD;QAAA,WAAO,sBAAoB,EAACvB,OAAO;MAAA;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QAC1C,eACJ;MAAK,SAAS,EAAC,KAAK;MAAA,wBAClB,QAAC,OAAO;QAAC,KAAK,EAAEL;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACzB,QAAC,IAAI;QAAC,KAAK,EAAEA;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAClB;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GA7DQD,GAAG;AAAA,KAAHA,GAAG;AA+DZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}